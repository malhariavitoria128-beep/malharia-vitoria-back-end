import{a as b}from"./chunk-CJ3CQDFZ.js";import{L as h,O as d,R as n,fc as g,k as c,mc as f,o as l,q as p,z as m}from"./chunk-LGC44TO3.js";var s=class extends Error{};s.prototype.name="InvalidTokenError";function k(r){return decodeURIComponent(atob(r).replace(/(.)/g,(e,t)=>{let o=t.charCodeAt(0).toString(16).toUpperCase();return o.length<2&&(o="0"+o),"%"+o}))}function j(r){let e=r.replace(/-/g,"+").replace(/_/g,"/");switch(e.length%4){case 0:break;case 2:e+="==";break;case 3:e+="=";break;default:throw new Error("base64 string is not of the correct length")}try{return k(e)}catch{return atob(e)}}function v(r,e){if(typeof r!="string")throw new s("Invalid token specified: must be a string");e||(e={});let t=e.header===!0?0:1,o=r.split(".")[t];if(typeof o!="string")throw new s(`Invalid token specified: missing part #${t+1}`);let u;try{u=j(o)}catch(a){throw new s(`Invalid token specified: invalid base64 for part #${t+1} (${a.message})`)}try{return JSON.parse(u)}catch(a){throw new s(`Invalid token specified: invalid json for part #${t+1} (${a.message})`)}}var i="app_token",w=class r{constructor(e,t){this.http=e;this.router=t}usuarioSubject=new c(null);usuario$=this.usuarioSubject.asObservable();baseUrl=b.apiUrl;initialize(){let e=this.getToken();if(!e){this.usuarioSubject.next(null);return}try{this.setUsuarioFromToken(e)}catch{localStorage.removeItem(i),this.usuarioSubject.next(null)}}login(e){return this.http.post(`${this.baseUrl}Auth/login`,e).pipe(h(t=>{this.setToken(t.token),this.setUsuarioFromToken(t.token)}),p(()=>this.usuarioSubject.value),m(t=>l(()=>t)))}register(e){return this.http.post(`${this.baseUrl}Auth/register`,e)}logout(){localStorage.removeItem(i),this.usuarioSubject.next(null),this.router.navigate(["/login"])}getToken(){return localStorage.getItem(i)}setToken(e){localStorage.setItem(i,e)}setUsuarioFromToken(e){let t=v(e),o={id:t.sub,email:t.email,roles:Array.isArray(t["http://schemas.microsoft.com/ws/2008/06/identity/claims/role"])?t["http://schemas.microsoft.com/ws/2008/06/identity/claims/role"]:[t["http://schemas.microsoft.com/ws/2008/06/identity/claims/role"]],isApproved:t.is_approved==="true"};this.usuarioSubject.next(o)}hasRole(e){return!!this.usuarioSubject.value?.roles.includes(e)}isUserApproved(){return!!this.usuarioSubject.value?.isApproved}changePassword(e){return this.http.put(`${this.baseUrl}Auth/password`,e)}static \u0275fac=function(t){return new(t||r)(n(g),n(f))};static \u0275prov=d({token:r,factory:r.\u0275fac,providedIn:"root"})};export{w as a};
